version: '3.4'
services:
  redis:
    image: redis:6.2.6
    ports:
      - "6379:6379"
    logging:
      driver: "json-file"
      options:
        max-size: 10m
    volumes:
      - ./docker-data/redis:/data
    networks:
      - prod-network
  rabbitmq:
    image: rabbitmq:3-management
    command: '/bin/bash -c "apt-get update -y && apt-get install -y curl && rabbitmq-plugins enable rabbitmq_management rabbitmq_web_mqtt rabbitmq_mqtt; rabbitmq-server"'
    env_file: .env
    ports:
      - '5672:5672' # publisher and consumer connections
      - '15672:15672' # RabbitMQ GUI
      - '15675:15675' # mqtt
    volumes:
      - ./docker-data/rabbitmq/data/:/var/lib/rabbitmq
      - ./docker-data/rabbitmq/log/:/var/log/rabbitmq
    restart: always
    networks:
      - prod-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:15672']
      interval: 2s
      timeout: 10s
      retries: 10
  mysql-db:
    build:
      context: ./mysql
    restart: always
    env_file: .env
    ports:
      - '3306:3306'
    logging:
      driver: "json-file"
      options:
        max-size: 10m
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./docker-data/mysql/platform20_db:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - prod-network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '--silent']
networks:
  prod-network:
    external: true


