

upstream yide_auth {
  server 127.0.0.1:7060;
  keepalive 64;
}


server {
access_log  /var/log/nginx/access.log ;
error_log  /var/log/nginx/error.log warn;

gzip on; # 默认off，是否开启gzip
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;



  listen 443 ssl;
      #配置HTTPS的默认访问端口为443。
      #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
      #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
      server_name yide.yidesgfund.com;
      ssl_certificate /root/.acme.sh/yide.yidesgfund.com/yide.yidesgfund.com.cer;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
      ssl_certificate_key /root/.acme.sh/yide.yidesgfund.com/yide.yidesgfund.com.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。
#       ssl_certificate /root/yidesgfund/ssl/yide.yidesgfund.com.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
#       ssl_certificate_key /root/yidesgfund/ssl/yide.yidesgfund.com.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。
      ssl_session_timeout 5m;
      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
      #表示使用的加密套件的类型。
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
      ssl_prefer_server_ciphers on;

      location / {
        #二级路由时需要使用别名alias，不用root
           root /root/dist/Yide_React_BaseUI/dist;
            index  index.html;
            #若不配置try_files，刷新会404
            try_files $uri $uri/ /index.html;
      }

        location ^~ /assets/ {
                root /root/dist/Yide_React_BaseUI/dist;
                index index.html index.htm;

                gzip_static on;
                expires max;
                add_header Cache-Control public;
        }
        # 绑定域名
    location ^~ /api/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://127.0.0.1:8399/;
    }

      location ^~ /api/auth/ {
        auth_request       /auth;
        auth_request_set   $auth_code $sent_http_x_md_global_code;
        auth_request_set   $auth_platform $sent_http_x_md_global_platform;
        proxy_set_header   X-Tenant-Id auth3.yidesgfund.com;
        proxy_set_header   X-Md-Global-Code $auth_code;
        proxy_set_header   X-Md-Global-Platform $auth_platform;
        proxy_redirect     off;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-NginX-Proxy true;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection 'upgrade';
        proxy_http_version 1.1;
        proxy_pass         http://yide_auth/;
      }

#       location ^~ /auth {
#         internal;
#         proxy_set_header        X-Tenant-Id auth_pwa.yidesgfund.com;
#         proxy_pass              http://yide_auth/permission?method=$request_method&uri=$request_path;
#         proxy_pass_request_body off;
#       }

      # 处理 /wx.html 的请求，确保不进入循环重定向
         location = /wx.html {
             alias /root/yidesgfund/dist/wx/wx.html;  # 直接定位到 wx.html 文件
         }




        location /files {
               proxy_buffering off;
               proxy_set_header Host $http_host;
               rewrite ^/files/(.*)$ /$1 break;
               proxy_pass       http://127.0.0.1:9000;
         }

        location /.well-known/acme-challenge {
          		root /root/.acme.sh/yide.yidesgfund.com;
          	}

}

server {
  listen 80;
  server_name  yide.yidesgfund.com;
  location /.well-known/acme-challenge {
          		root /root/.acme.sh/yide.yidesgfund.com;
          		allow all;
          	}
  return  301 https://$server_name$request_uri;
}



server {
access_log  /var/log/nginx/access.log ;
error_log  /var/log/nginx/error.log warn;

gzip on; # 默认off，是否开启gzip
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;



  listen 443 ssl;
      #配置HTTPS的默认访问端口为443。
      #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
      #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
      server_name yide-admin.yidesgfund.com;
      ssl_certificate /root/.acme.sh/yide-admin.yidesgfund.com/yide-admin.yidesgfund.com.cer;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
      ssl_certificate_key /root/.acme.sh/yide-admin.yidesgfund.com/yide-admin.yidesgfund.com.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。
      ssl_session_timeout 5m;
      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
      #表示使用的加密套件的类型。
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
      ssl_prefer_server_ciphers on;
     location ^~ / {
            root /root/dist/Yide_React_JoyUI/dist;
             index index.html index.htm;

                    try_files $uri $uri/ /index.html;
            }

        location ^~ /assets/ {
        root /root/dist/Yide_React_JoyUI/dist;
                index index.html index.htm;

                gzip_static on;
                expires max;
                add_header Cache-Control public;
        }
        # 绑定域名
    location ^~ /api/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://127.0.0.1:8399/;
    }

      location ^~ /api/auth/ {
        auth_request       /auth;
        auth_request_set   $auth_code $sent_http_x_md_global_code;
        auth_request_set   $auth_platform $sent_http_x_md_global_platform;
        proxy_set_header   X-Tenant-Id auth3.yidesgfund.com;
        proxy_set_header   X-Md-Global-Code $auth_code;
        proxy_set_header   X-Md-Global-Platform $auth_platform;
        proxy_redirect     off;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-NginX-Proxy true;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection 'upgrade';
        proxy_http_version 1.1;
        proxy_pass         http://yide_auth/;
      }

      # 处理 /wx.html 的请求，确保不进入循环重定向
         location = /wx.html {
             alias /root/yidesgfund/dist/wx/wx.html;  # 直接定位到 wx.html 文件
         }



  location /.well-known/acme-challenge {
          		root /root/.acme.sh/yide-admin.yidesgfund.com;
          	}

        location /files {
               proxy_buffering off;
               proxy_set_header Host $http_host;
               rewrite ^/files/(.*)$ /$1 break;
               proxy_pass       http://127.0.0.1:9000;
         }


}

server {
  listen 80;
  server_name  yide-admin.yidesgfund.com;
  location /.well-known/acme-challenge {
          		root /root/.acme.sh/yide-admin.yidesgfund.com;
          	}
  return  301 https://$server_name$request_uri;
}



# 将 HTTP 请求重定向到 HTTPS
server {
    listen 80;
    server_name minio.yidesgfund.com;
location /.well-known/acme-challenge {
              		root /root/.acme.sh/minio.yidesgfund.com;
              	}
    # 将所有 HTTP 请求重定向到 HTTPS
    return 301 https://$host$request_uri;
}

# 配置 HTTPS 服务器
server {
    listen 443 ssl;
    server_name minio.yidesgfund.com;

    # SSL 证书路径（假设使用 Let's Encrypt）
    ssl_certificate /root/.acme.sh/minio.yidesgfund.com/minio.yidesgfund.com.cer;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
          ssl_certificate_key /root/.acme.sh/minio.yidesgfund.com/minio.yidesgfund.com.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。

    # 推荐的 SSL 设置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    # 增强的安全头部（可选）
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";


location /.well-known/acme-challenge {
              		root /root/.acme.sh/minio.yidesgfund.com;
              	}
    # 可选：代理 MinIO 控制台（如果需要）
    location / {
        proxy_set_header Host $http_host;
        		    proxy_set_header X-Real-IP $remote_addr;
        		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        		    proxy_set_header X-Forwarded-Proto $scheme;
        		    proxy_set_header X-NginX-Proxy true;
        		    #real_ip_header X-Real-IP;
        		    proxy_connect_timeout 300;
        		    proxy_http_version 1.1;
        		    proxy_set_header Upgrade $http_upgrade;
        		    proxy_set_header Connection "upgrade";
        		    chunked_transfer_encoding off;

        proxy_pass http://127.0.0.1:9001;
    }
}

server {
    listen 80 ;
    server_name minio-api.yidesgfund.com;
    location / {
        proxy_set_header Host $http_host;
        		    proxy_set_header X-Real-IP $remote_addr;
        		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        		    proxy_set_header X-Forwarded-Proto $scheme;
        		    proxy_set_header X-NginX-Proxy true;
        		    #real_ip_header X-Real-IP;
        		    proxy_connect_timeout 300;
        		    proxy_http_version 1.1;
        		    proxy_set_header Upgrade $http_upgrade;
        		    proxy_set_header Connection "upgrade";
        		    chunked_transfer_encoding off;

        proxy_pass http://127.0.0.1:9000;
    }
}